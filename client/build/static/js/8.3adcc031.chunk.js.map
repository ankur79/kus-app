{"version":3,"sources":["components/StoreMapView.js","components/MarketingAnalyst.js","components/ModalTable.js","components/ModalChart.js","components/ModalHighChart.js","components/ModalContent.js","images/unamed3.png"],"names":["info","L","control","geojsn","StoreMapView","state","lat","lng","zoom","data","stateData","defaultView","crumbs","show","this","addPointers","addTileLayer","d","feature","fillColor","getColor","properties","density","weight","opacity","color","dashArray","fillOpacity","layer","refs","map","leafletElement","eachLayer","setStyle","update","Browser","ie","opera","edge","bringToFront","content","latlng","divIcon","className","html","String","id","openPopup","props","_this2","thorsten","t","modalContent","store_id","handleShow","concat","name","street","city","zip","_this3","geoJSON","stores","features","pointToLayer","popContent","marker","icon","markerIcon","bindPopup","addTo","_this4","fitBounds","getBounds","removeLayer","setState","on","mouseover","highlightFeature","bind","mouseout","resetHighlight","click","zoomToFeature","tileLayer","crumbList","forEach","item","index","breadCrumbs","onAdd","_div","DomUtil","create","innerHTML","_this5","legend","position","div","grades","i","length","_this6","react_default","a","createElement","Fragment","style","display","key","onClick","openPop","phone","Map","center","ref","Component","MarketingAnalyst","crumbsList","kobai","_this","loadTableData","loc","window","location","hostname","fetch","then","res","json","koData","catch","error","console","reactstrap_es","isOpen","toggle","handleClose","ModalContent","contentType","Common","header","StoreMapView_StoreMapView","ModalTable","striped","bordered","condensed","hover","Object","keys","values","React","ModalChart","object","src","img","width","height","ModalHighChart","config","title","text","yAxis","labels","format","opposite","layout","align","verticalAlign","plotOptions","series","label","connectorAllowed","pointStart","predict","filter","WEEK_TEMP","TEMP_PREDICTION","ACTIVITY_PREDICTION","responsive","rules","condition","maxWidth","chartOptions","ReactHighcharts_default","_this$props","toUpperCase","components_ModalTable","components_ModalChart","metrics","components_ModalHighChart","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/8.3adcc031.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Map } from \"react-leaflet\";\nimport L from \"leaflet\";\nvar info = L.control();\nvar geojsn = [];\nexport default class StoreMapView extends Component {\n  state = {\n    lat: 42.3,\n    lng: -83.0,\n    zoom: 9,\n    data: [],\n    stateData: [],\n    defaultView: \"country\",\n    crumbs: [\"USA\"],\n    show: false\n  };\n\n  componentDidMount() {\n    this.addPointers();\n    this.addTileLayer();\n  }\n\n  getColor(d) {\n    return d > 1000\n      ? \"#800026\"\n      : d > 500\n      ? \"#BD0026\"\n      : d > 200\n      ? \"#E31A1C\"\n      : d > 100\n      ? \"#FC4E2A\"\n      : d > 50\n      ? \"#FD8D3C\"\n      : d > 20\n      ? \"#FEB24C\"\n      : d > 10\n      ? \"#FED976\"\n      : \"#FFEDA0\";\n  }\n  style(feature) {\n    return {\n      fillColor: this.getColor(feature.properties.density),\n      weight: 2,\n      opacity: 1,\n      color: \"white\",\n      dashArray: \"3\",\n      fillOpacity: 0.7\n    };\n  }\n  countyStyle(feature) {\n    return {\n      weight: 1,\n      opacity: 1,\n      color: \"black\",\n      dashArray: \"2\",\n      fillOpacity: 0.3\n    };\n  }\n  highlightFeature(feature, layer) {\n    //var layer = e.target;\n    this.refs.map.leafletElement.eachLayer(layer => {\n      //console.log(layer);\n    });\n    layer.setStyle({\n      weight: 5,\n      color: \"#666\",\n      dashArray: \"\",\n      fillOpacity: 0.7\n    });\n    info.update(layer.feature.properties);\n    if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {\n      layer.bringToFront();\n    }\n  }\n  resetHighlight(feature, layer) {\n    layer.setStyle({\n      weight: 2,\n      opacity: 1,\n      color: \"white\",\n      dashArray: \"3\",\n      fillOpacity: 0.7\n    });\n    info.update();\n    //geojson.resetStyle(e.target);\n  }\n  markerIcon(content, latlng) {\n    return L.divIcon({ className: \"my-div-icon\", html: String(content) });\n  }\n  openPop(id) {\n    geojsn.eachLayer(function(feature) {\n      if (feature.feature.properties.id == id) {\n        feature.openPopup();\n      }\n    });\n  }\n\n  popContent(props) {\n    const { properties } = props;\n    const t = (modalContent, store_id) => {\n      this.props.handleShow(modalContent, store_id);\n    };\n    L.thorsten = {};\n    L.thorsten.t = t;\n    const htmlStr = `<div class=\"container\">\n                            <div class=\"row pop-pad\">\n                                <h4>${properties.name}</h4>\n                                <div class=\"pop-address\">${properties.street}</div>\n                                <div class=\"pop-address\">${properties.city}, ${properties.state}, ${properties.zip}</div>\n                            </div>\n                            <div class=\"row pop-address pop-pad\">\n                                <b>Flu Season</b>\n                                <select>\n                                    <option>2018-2019</option>\n                                    <option>2017-2018</option>\n                                </select>\n                            </div>\n                            <div class=\"row pop-address\">\n                                <a nohref onclick=\"L.thorsten.t('table', ${properties.store_id})\">Table</a> \n                                <a nohref onclick=\"L.thorsten.t('chart', ${properties.store_id})\">Chart</a> \n                                <a nohref onclick=\"L.thorsten.t('metrics', ${properties.store_id})\">Metrics</a>\n                                <a nohref onclick=\"L.thorsten.t('predict line', ${properties.store_id})\">Predict Line</a>\n                            </div>\n                        </div>`;\n    return htmlStr;\n  }\n  addPointers() {\n    geojsn = L.geoJSON(this.props.stores.features, {\n      pointToLayer: (feature, latlng) => {\n        const { properties } = feature;\n        let popContent = this.popContent(feature);\n        return L.marker(latlng, {\n          icon: this.markerIcon(feature.properties.id, latlng)\n        }).bindPopup(popContent);\n      }\n    }).addTo(this.refs.map.leafletElement);\n    this.addTileLayer();\n  }\n  zoomToFeature(feature, layer) {\n    this.refs.map.leafletElement.fitBounds(layer.getBounds());\n    this.refs.map.leafletElement.eachLayer(layer => {\n      this.refs.map.leafletElement.removeLayer(layer);\n    });\n    //console.log(feature)\n    if (this.state.defaultView === \"state\") {\n      this.addPointers();\n      this.setState({ defaultView: \"county\" });\n    }\n  }\n  onEachFeature(feature, layer) {\n    layer.on({\n      mouseover: this.highlightFeature.bind(this, feature, layer),\n      mouseout: this.resetHighlight.bind(this, feature, layer),\n      click: this.zoomToFeature.bind(this, feature, layer)\n    });\n  }\n  onEachStateFeature(feature, layer) {\n    layer.on({\n      click: this.zoomToFeature.bind(this, feature, layer)\n    });\n  }\n  addTileLayer() {\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {}).addTo(\n      this.refs.map.leafletElement\n    );\n  }\n  buildCrumbs() {\n    let crumbList = \"\";\n    this.state.crumbs.forEach((item, index) => {\n      if (index > 0) {\n        crumbList += ` > ${item}`;\n      } else {\n        crumbList += item;\n      }\n    });\n    this.props.breadCrumbs(crumbList);\n  }\n  infoControl() {\n    info.onAdd = function() {\n      this._div = L.DomUtil.create(\"div\", \"info\"); // create a div with a class \"info\"\n      this.update();\n      return this._div;\n    };\n\n    // method that we will use to update the control based on feature properties\n    // passed\n    info.update = function(props) {\n      this._div.innerHTML =\n        \"<h4>US Flu Data</h4>\" +\n        (props\n          ? \"<b>\" + props.name + \"</b><br />\" + props.density + \" flu cases\"\n          : \"Hover over a state\");\n    };\n\n    info.addTo(this.refs.map.leafletElement);\n  }\n  displayLegend() {\n    var legend = L.control({ position: \"bottomright\" });\n\n    legend.onAdd = () => {\n      var div = L.DomUtil.create(\"div\", \"info legend\"),\n        grades = [0, 10, 20, 50, 100, 200, 500, 1000],\n        labels = [];\n\n      // loop through our density intervals and generate a label with a colored square\n      // for each interval\n      for (var i = 0; i < grades.length; i++) {\n        div.innerHTML +=\n          '<i style=\"background:' +\n          this.getColor(grades[i] + 1) +\n          '\"></i> ' +\n          grades[i] +\n          (grades[i + 1] ? \"&ndash;\" + grades[i + 1] + \"<br>\" : \"+\");\n      }\n\n      return div;\n    };\n\n    legend.addTo(this.refs.map.leafletElement);\n  }\n  render() {\n    const position = [this.state.lat, this.state.lng];\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            display: \"flex\"\n          }}\n        >\n          <div className=\"col-xs-4 col-sm-4 pr-0 pl-0\">\n            {this.props.stores.features.map(item => (\n              <li\n                key={item.properties.id}\n                onClick={() => this.openPop(item.properties.id)}\n                className=\"addrs-list\"\n              >\n                <div\n                  style={{\n                    display: \"flex\"\n                  }}\n                >\n                  <div className=\"my-div-icon\">{item.properties.id}</div>\n                  <div className=\"mt-1 ml-2\">\n                    <h6>{item.properties.name}</h6>\n                  </div>\n                </div>\n                <div className=\"ml-3 pl-4\">\n                  <address>{item.properties.street}</address>\n                  <address>{`${item.properties.city}, ${item.properties.state} ${item.properties.zip}`}</address>\n                  <address>{item.properties.phone}</address>\n                </div>\n              </li>\n            ))}\n          </div>\n          <div className=\"col-xs-8 col-sm-8 pr-0 pl-0\">\n            <Map center={position} zoom={this.state.zoom} ref=\"map\" />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Modal } from \"reactstrap\";\nimport StoreMapView from \"./StoreMapView\";\nimport ModalContent from \"./ModalContent\";\nimport stores from \"../dataSet/stores.json\";\nimport { PageHeader } from \"../utils/Common\";\nclass MarketingAnalyst extends Component {\n  state = {\n    crumbsList: \"USA\",\n    show: false,\n    modalContent: \"\",\n    store_id: 0,\n    kobai: []\n  };\n  breadCrumbs(crumbs) {\n    this.setState({ crumbsList: crumbs });\n  }\n  handleClose() {\n    this.setState({ show: false, modalContent: \"\" });\n  }\n  handleShow = (modalContent, store_id, properties) => {\n    this.setState(\n      {\n        show: true,\n        modalContent,\n        store_id\n      },\n      () => {\n        if (modalContent === \"table\") {\n          this.loadTableData(store_id);\n        }\n      }\n    );\n  };\n  loadTableData(store_id) {\n    const loc =\n      window.location.hostname === \"localhost\" ? \"http://localhost:5000\" : \"\";\n\n    fetch(`${loc}/api/ko-connect/store/${store_id}`)\n      .then(res => res.json())\n      .then(res => {\n        this.setState(\n          {\n            kobai: res.koData\n          },\n          () => {\n            //\n          }\n        );\n      })\n      .catch(error => console.error(\"Error:\", error));\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"static-modal\">\n          <Modal\n            isOpen={this.state.show}\n            className=\"custom-modal modal-lg\"\n            toggle={() => this.handleClose()}\n          >\n            <ModalContent\n              contentType={this.state.modalContent}\n              store_id={this.state.store_id}\n              kobai={this.state.kobai}\n            />\n          </Modal>\n        </div>\n        <PageHeader header=\"Supply Chain Analytics\" />\n        <div className=\"row placeholders\">\n          <div className=\"col-xs-12 col-sm-12 placeholder insight-tab\">\n            <div className=\"leaflet-container\">\n              <StoreMapView\n                handleShow={(modalContent, store_id) =>\n                  this.handleShow(modalContent, store_id)\n                }\n                breadCrumbs={crumbs => this.breadCrumbs(crumbs)}\n                stores={stores}\n              />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MarketingAnalyst;\n","import React from \"react\";\nimport { Table } from \"reactstrap\";\n\nclass ModalTable extends React.Component {\n  render() {\n    const { data } = this.props;\n\n    return (\n      <React.Fragment>\n        {data.length < 1 ? (\n          <div className=\"loader\"></div>\n        ) : (\n          <Table striped bordered condensed hover>\n            <thead>\n              <tr>\n                {Object.keys(data[0]).map((item, index) => (\n                  <th key={index}>{item}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {data.map((item, index) => {\n                return (\n                  <tr key={index}>\n                    {Object.values(item).map((item, index) => {\n                      return <td key={index}>{item}</td>;\n                    })}\n                  </tr>\n                );\n              })}\n            </tbody>{\" \"}\n          </Table>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ModalTable;\n","import React from \"react\";\nimport { Media } from \"reactstrap\";\nimport img from \"../images/unamed3.png\";\nclass ModalChart extends React.Component {\n  render() {\n    return (\n      <div>\n        <img\n          object\n          src={img}\n          style={{\n            width: \"100%\",\n            height: \"auto\"\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ModalChart;\n","import React from 'react';\nimport ReactHighcharts from 'react-highcharts';\nimport predict from '../dataSet/predict.json'\n\nclass ModalHighChart extends React.Component {\n    render() {\n        const WEEK_TEMP = predict\n            .filter(item => item.WEEK_TEMP)\n            .map(item => item.WEEK_TEMP);\n\n        const TEMP_PREDICTION = predict\n            .filter(item => item.TEMP_PREDICTION)\n            .map(item => item.TEMP_PREDICTION);\n\n        const ACTIVITY_PREDICTION = predict\n            .filter(item => item.ACTIVITY_PREDICTION)\n            .map(item => item.ACTIVITY_PREDICTION);\n\n        const config = {\n            title: {\n                text: ''\n            },\n            yAxis: [\n                { // Primary yAxis\n                    labels: {\n                        format: '{value}°C'\n                    },\n                    title: {\n                        text: 'Temperature'\n                    }\n\n                }, {\n                    labels: {\n                        format: 'Int'\n                    },\n                    title: {\n                        text: 'Activity'\n                    },\n                    opposite: true\n\n                }\n            ],\n            legend: {\n                layout: 'vertical',\n                align: 'right',\n                verticalAlign: 'middle'\n            },\n\n            plotOptions: {\n                series: {\n                    label: {\n                        connectorAllowed: false\n                    },\n                    pointStart: 35\n                }\n            },\n\n            series: [\n                {\n                    name: 'Weekly Temperature',\n                    data: WEEK_TEMP\n                }, {\n                    name: 'Temperature Prediction',\n                    data: TEMP_PREDICTION\n                }, {\n                    name: 'Activity Prediction',\n                    data: ACTIVITY_PREDICTION\n                }\n            ],\n\n            responsive: {\n                rules: [\n                    {\n                        condition: {\n                            maxWidth: 500\n                        },\n                        chartOptions: {\n                            legend: {\n                                layout: 'horizontal',\n                                align: 'center',\n                                verticalAlign: 'bottom'\n                            }\n                        }\n                    }\n                ]\n            }\n        }\n        return (\n            <div><ReactHighcharts config={config}/></div>\n        )\n    }\n}\n\nexport default ModalHighChart;","import React from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport ModalTable from \"./ModalTable\";\nimport ModalChart from \"./ModalChart\";\nimport ModalHighChart from \"./ModalHighChart\";\nimport csvjson from \"../dataSet/csvjson.json\";\nimport metrics from \"../dataSet/metrics.json\";\nclass ModalContent extends React.Component {\n  render() {\n    const { contentType, kobai } = this.props;\n    return (\n      <React.Fragment>\n        <ModalHeader>{contentType.toUpperCase()}</ModalHeader>\n        <ModalBody>\n          {contentType === \"table\" ? (\n            <div className=\"modal-table\">\n              <ModalTable data={kobai} />\n            </div>\n          ) : contentType === \"chart\" ? (\n            <div>\n              <ModalChart />\n            </div>\n          ) : contentType === \"metrics\" ? (\n            <div className=\"modal-table\">\n              <ModalTable data={metrics} />\n            </div>\n          ) : contentType === \"predict line\" ? (\n            <div>\n              <ModalHighChart />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </ModalBody>\n        <ModalFooter></ModalFooter>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ModalContent;\n","module.exports = __webpack_public_path__ + \"static/media/unamed3.5611b10f.png\";"],"sourceRoot":""}