{"version":3,"sources":["components/PedDeathModel.js","components/HospModel.js","components/VacCoverageModel.js","components/VacEffectModel.js","components/FluSeasons.js"],"names":["PedDeathModel","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","d","groupBy","state","pedData","setState","chartData","target","value","buildSeries","data","fd","filter","item","DEATHS","map","num","series","categories","keys","seasons","_this2","loc","window","location","hostname","fetch","concat","then","res","json","pedDeaths","catch","error","console","_this$state","model","react_default","a","createElement","className","onChange","s","key","AppChart","chartTitle","React","Component","HospModel","modelName","lines","i","dp","k","push","name","cats","WEEK","YEAR","hospitalizations","VacCoverageModel","vacCoverage","VacEffectModel","Adj_Overall_VE","vacEffect","FluSeasons","toggle","bind","assertThisInitialized","activeTab","tab","match","Fragment","Common","header","NavLink","exact","activeClassName","to","path","Route","component"],"mappings":"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","file":"static/js/7.bcd2037c.chunk.js","sourcesContent":["import React from \"react\";\nimport AppChart from \"../components/AppChart\";\nimport { groupBy } from \"lodash\";\nclass PedDeathModel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      series: [],\n      pedData: [],\n      chartData: [],\n      seasons: [],\n      value: \"season\"\n    };\n  }\n  componentDidMount() {\n    const loc =\n      window.location.hostname === \"localhost\" ? \"http://localhost:5000\" : \"\";\n    fetch(`${loc}/peddeath.json`)\n      .then(res => res.json())\n      .then(res => {\n        const seasons = Object.keys(groupBy(res.pedDeaths, \"SEASON\"));\n        this.setState(\n          {\n            pedData: res.pedDeaths,\n            chartData: res.pedDeaths,\n            seasons\n          },\n          () => {\n            this.buildSeries(res.pedDeaths);\n          }\n        );\n      })\n      .catch(error => console.error(\"Error:\", error));\n  }\n  handleChange = e => {\n    const d = groupBy(this.state.pedData, \"SEASON\");\n    this.setState(\n      {\n        chartData:\n          e.target.value === \"season\" ? this.state.pedData : d[e.target.value],\n        value: e.target.value\n      },\n      () => {\n        this.buildSeries(this.state.chartData);\n      }\n    );\n  };\n  buildSeries = data => {\n    const fd = data.filter(item => item.DEATHS).map(num => num.DEATHS);\n    this.setState({\n      series: [\n        {\n          data: fd\n        }\n      ],\n      categories: Object.keys(groupBy(data, \"WEEK\"))\n    });\n  };\n  render() {\n    const { model, seasons } = this.state;\n    return (\n      <div className=\"row placeholders\">\n        <div className=\"col-xs-12 col-sm-12 placeholder insight-tab\">\n          <div className=\"row\">\n            <div className=\"col col-md-2\">\n              <select\n                className=\"form-control\"\n                value={this.state.value}\n                onChange={this.handleChange}\n              >\n                <option value=\"season\">All Seasons</option>\n                {seasons.map(s => (\n                  <option key={s} value={s}>\n                    {s}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col\">\n              <AppChart\n                chartTitle=\"Pediatric Deaths\"\n                categories={this.state.categories}\n                series={this.state.series}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PedDeathModel;\n","import React from 'react';\nimport AppChart from '../components/AppChart';\nimport {groupBy} from 'lodash';\nclass HospModel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            series: [],\n            pedData: [],\n            chartData: [],\n            seasons: [],\n            value: \"season\",\n            lines: [\n                {\n                    name: \"AGE 0-4\",\n                    dp: \"AGE 0-4\"\n                }, {\n                    name: \"AGE 5-24\",\n                    dp: \"AGE 5-24\"\n                }, {\n                    name: \"AGE 25-49\",\n                    dp: \"AGE 25-49\"\n                }, {\n                    name: \"AGE 25-64\",\n                    dp: \"AGE 25-64\"\n                }, {\n                    name: \"AGE 50-64\",\n                    dp: \"AGE 50-64\"\n                }, {\n                    name: \"AGE 65\",\n                    dp: \"AGE 65\"\n                }\n            ]\n        }\n    }\n\n    componentDidMount() {\n        const loc = window.location.hostname === \"localhost\"\n            ? \"http://localhost:5000\"\n            : \"\"\n        fetch(`${loc}/api/hospitalizations`)\n            .then(res => res.json())\n            .then(res => {\n                this.setState({\n                    pedData: res.hospitalizations,\n                    chartData: res.hospitalizations\n                }, () => {\n                    this.buildSeries(res.hospitalizations);\n                })\n\n            })\n            .catch(error => console.error('Error:', error))\n    }\n    buildSeries = (data) => {\n        let modelName = this\n            .state\n            .lines\n            .filter(i => i.dp)\n            .map(i => i.dp);\n        const s = [];\n        const fd = this.state.chartData;\n        for (var i in modelName) {\n            let data = fd.map(k => {\n                return k[modelName[i]];\n            })\n            s.push({name: modelName[i], data: data})\n        }\n\n        let cats = fd.map(i => {\n            return `W ${i.WEEK} - Y ${i.YEAR}`\n        })\n        this.setState({series: s, categories: cats});\n    }\n    render() {\n        const {model, seasons} = this.state;\n        return (\n            <div className=\"row placeholders\">\n                <div className=\"col-xs-12 col-sm-12 placeholder insight-tab\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <AppChart\n                                chartTitle=\"Hospitalizations\"\n                                categories={this.state.categories}\n                                series={this.state.series}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default HospModel","import React from 'react';\nimport AppChart from '../components/AppChart';\nimport {groupBy} from 'lodash';\nclass VacCoverageModel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            series: [],\n            pedData: [],\n            chartData: [],\n            seasons: [],\n            lines: [\n                {\n                    name: \"18-49 yrs\",\n                    dp: \"18-49_yrs\"\n                }, {\n                    name: \"18-49 yrs high risk\",\n                    dp: \"18-49_yrs_hi_risk\"\n                }, {\n                    name: \"18-49 yrs without high risk\",\n                    dp: \"18-49_yrs_wo_hi_risk\"\n                }, {\n                    name: \"50-64 yrs\",\n                    dp: \"50-64_yrs\"\n                }, {\n                    name: \"65 yrs\",\n                    dp: \"65_yrs\"\n                }\n            ]\n        }\n    }\n    componentDidMount() {\n        const loc = window.location.hostname === \"localhost\"\n            ? \"http://localhost:5000\"\n            : \"\"\n        fetch(`${loc}/api/vaccoverage`)\n            .then(res => res.json())\n            .then(res => {\n                this.setState({\n                    pedData: res.vacCoverage,\n                    chartData: res.vacCoverage\n                }, () => {\n                    this.buildSeries(res.vacCoverage);\n                })\n\n            })\n            .catch(error => console.error('Error:', error))\n    }\n    buildSeries = (data) => {\n        let modelName = this\n            .state\n            .lines\n            .filter(i => i.dp)\n            .map(i => i.dp);\n        const s = [];\n        const fd = this.state.chartData;\n        for (var i in modelName) {\n            let data = fd.map(k => {\n                return k[modelName[i]];\n            })\n            s.push({name: modelName[i], data: data})\n        }\n        this.setState({\n            series: s,\n            categories: Object.keys(groupBy(data, \"season\"))\n        });\n    }\n    render() {\n        const {model, seasons} = this.state;\n        return (\n            <div className=\"row placeholders\">\n                <div className=\"col-xs-12 col-sm-12 placeholder insight-tab\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <AppChart\n                                chartTitle=\"Vaccination Coverage\"\n                                categories={this.state.categories}\n                                series={this.state.series}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VacCoverageModel","import React from 'react';\nimport AppChart from '../components/AppChart';\nimport {groupBy} from 'lodash';\nclass VacEffectModel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            series: [],\n            pedData: [],\n            chartData: []\n        }\n    }\n    componentDidMount() {\n        const loc = window.location.hostname === \"localhost\"\n            ? \"http://localhost:5000\"\n            : \"\"\n        fetch(`${loc}/api/vaceffect`)\n            .then(res => res.json())\n            .then(res => {\n                this.setState({\n                    pedData: res.vacEffect,\n                    chartData: res.vacEffect\n                }, () => {\n                    this.buildSeries(res.vacEffect);\n                })\n\n            })\n            .catch(error => console.error('Error:', error))\n    }\n    buildSeries = (data) => {\n        const fd = data\n            .filter(item => item.Adj_Overall_VE)\n            .map(num => num.Adj_Overall_VE);\n        this.setState({\n            series: [\n                {\n                    data: fd\n                }\n            ],\n            categories: Object.keys(groupBy(data, \"season\"))\n        });\n    }\n    render() {\n        const {model, seasons} = this.state;\n        return (\n            <div className=\"row placeholders\">\n                <div className=\"col-xs-12 col-sm-12 placeholder insight-tab\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <AppChart\n                                chartTitle=\"Vaccine Effectiveness Rate\"\n                                categories={this.state.categories}\n                                series={this.state.series}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default VacEffectModel","import React, {Component} from 'react';\nimport {BrowserRouter, Route, NavLink} from 'react-router-dom';\nimport {PageHeader} from '../utils/Common';\nimport PedDeathModel from '../components/PedDeathModel'\nimport HospModel from '../components/HospModel'\nimport VacCoverageModel from '../components/VacCoverageModel'\nimport VacEffectModel from '../components/VacEffectModel'\n\nclass FluSeasons extends Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this\n            .toggle\n            .bind(this);\n        this.state = {\n            activeTab: '1'\n        };\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({activeTab: tab});\n        }\n    }\n    render() {\n        const {match} = this.props;\n        return (\n            <React.Fragment>\n                <PageHeader header=\"Flu Seasons\"/>\n                <div className=\"row placeholders\">\n                    <div className=\"col-xs-12 col-sm-12 placeholder\">\n                        <ul className=\"nav nav-pills\">\n                            <li className=\"nav-item\">\n                                <NavLink\n                                    exact\n                                    activeClassName=\"active\"\n                                    className=\"nav-link \"\n                                    to={`${match.path}`}>Pediatric Deaths</NavLink>\n                            </li>\n                            <li className=\"nav-item\">\n                                <NavLink\n                                    activeClassName=\"active\"\n                                    className=\"nav-link\"\n                                    to={`${match.path}/hospitalizations`}>Hospitalizations</NavLink>\n                            </li>\n                            <li className=\"nav-item\">\n                                <NavLink\n                                    activeClassName=\"active\"\n                                    className=\"nav-link\"\n                                    to={`${match.path}/vac-effect`}>Vaccine Effectiveness Rate</NavLink>\n                            </li>\n                            <li className=\"nav-item\">\n                                <NavLink\n                                    activeClassName=\"active\"\n                                    className=\"nav-link\"\n                                    to={`${match.path}/vac-coverage`}>Vaccination Coverage</NavLink>\n                            </li>\n                        </ul>\n                        <Route exact path={`${match.path}`} component={PedDeathModel}/>\n                        <Route path={`${match.path}/hospitalizations`} component={HospModel}/>\n                        <Route path={`${match.path}/vac-effect`} component={VacEffectModel}/>\n                        <Route path={`${match.path}/vac-coverage`} component={VacCoverageModel}/>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default FluSeasons;\n"],"sourceRoot":""}