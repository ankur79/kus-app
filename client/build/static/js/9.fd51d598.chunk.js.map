{"version":3,"sources":["components/KobaiApp.js"],"names":["require","ReactHighcharts","Highcharts","KobaiApp","state","koData","fluRate","temp","week","loader","_this2","this","loc","window","location","hostname","fetch","concat","then","res","json","setState","kobai","buildSeries","catch","error","console","data","orderBy","i","push","Number","reportedFluRate","avgTempInFahrenheit","endingDate","config","chart","zoomType","title","text","xAxis","categories","crosshair","yAxis","labels","format","opposite","tooltip","shared","legend","layout","align","x","verticalAlign","y","floating","backgroundColor","series","name","type","valueSuffix","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","className","_utils_Common__WEBPACK_IMPORTED_MODULE_7__","header","react_highcharts__WEBPACK_IMPORTED_MODULE_8___default","ref","Component"],"mappings":"yLAIAA,EAAQ,GAARA,CAA2BC,IAAgBC,gBACrCC,6MACFC,MAAQ,CACJC,OAAQ,GACRC,QAAS,GACTC,KAAM,GACNC,KAAM,GACNC,QAAQ,sFAEQ,IAAAC,EAAAC,KACVC,EAAmC,cAA7BC,OAAOC,SAASC,SACtB,wBACA,GACNC,MAAK,GAAAC,OAAIL,EAAJ,2BACAM,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GACFT,EAAKW,SAAS,CACVC,MAAOH,EAAId,QACZ,WACCK,EAAKa,YAAYJ,EAAId,YAI5BmB,MAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAM,SAAUA,yCAEpCE,GACRA,EAAOC,kBAAQD,EAAM,CAAC,cAAe,CAAC,QACtC,IAAIrB,EAAU,GACVC,EAAO,GACPC,EAAO,GACX,IAAK,IAAIqB,KAAKF,EACVrB,EAAQwB,KAAKC,OAAOJ,EAAKE,GAAGG,kBAC5BzB,EAAKuB,KAAKC,OAAOJ,EAAKE,GAAGI,sBACzBzB,EAAKsB,KAAKH,EAAKE,GAAGK,YAEtBvB,KAAKU,SAAS,CAACf,QAASA,EAASC,KAAMA,EAAMC,KAAMA,EAAMC,QAAQ,qCAGjE,IAAM0B,EAAS,CACXC,MAAO,CACHC,SAAU,MAEdC,MAAO,CACHC,KAAM,qBAEVC,MAAO,CACH,CACIC,WAAY9B,KAAKP,MAAMI,KACvBkC,WAAW,IAGnBC,MAAO,CACH,CACIC,OAAQ,CACJC,OAAQ,gBAEZP,MAAO,CACHC,KAAM,gBAEX,CACCD,MAAO,CACHC,KAAM,YAEVK,OAAQ,CACJC,OAAQ,aAEZC,UAAU,IAGlBC,QAAS,CACLC,QAAQ,GAEZC,OAAQ,CACJC,OAAQ,WACRC,MAAO,OACPC,EAAG,IACHC,cAAe,MACfC,EAAG,GACHC,UAAU,EACVC,gBAAiB,0BAErBC,OAAQ,CACJ,CACIC,KAAM,WACNC,KAAM,OACNhB,MAAO,EACPhB,KAAMhB,KAAKP,MAAME,QACjByC,QAAS,CACLa,YAAa,OAGlB,CACCF,KAAM,cACNC,KAAM,SACNhC,KAAMhB,KAAKP,MAAMG,KACjBwC,QAAS,CACLa,YAAa,YAK7B,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACKrD,KAAKP,MAAMK,OACNoD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACfJ,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAYC,OAAO,UACnBN,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,+CACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAiB3B,OAAQA,EAAQkC,IAAI,uBA9GtDC,aAyHRnE","file":"static/js/9.fd51d598.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport {orderBy} from 'lodash';\nimport {PageHeader} from '../utils/Common';\nimport ReactHighcharts from \"react-highcharts\";\nrequire('highcharts-more')(ReactHighcharts.Highcharts);\nclass KobaiApp extends Component {\n    state = {\n        koData: [],\n        fluRate: [],\n        temp: [],\n        week: [],\n        loader: true\n    }\n    componentDidMount() {\n        const loc = window.location.hostname === \"localhost\"\n            ? \"http://localhost:5000\"\n            : \"\"\n        fetch(`${loc}/api/ko-drate/count/50`)\n            .then(res => res.json())\n            .then(res => {\n                this.setState({\n                    kobai: res.koData\n                }, () => {\n                    this.buildSeries(res.koData);\n                })\n\n            })\n            .catch(error => console.error('Error:', error))\n    }\n    buildSeries(data) {\n        data = orderBy(data, ['endingDate'], ['asc']);\n        let fluRate = []\n        let temp = []\n        let week = []\n        for (let i in data) {\n            fluRate.push(Number(data[i].reportedFluRate));\n            temp.push(Number(data[i].avgTempInFahrenheit));\n            week.push(data[i].endingDate)\n        }\n        this.setState({fluRate: fluRate, temp: temp, week: week, loader: false})\n    }\n    render() {\n        const config = {\n            chart: {\n                zoomType: 'xy'\n            },\n            title: {\n                text: 'Reported Flu Rate'\n            },\n            xAxis: [\n                {\n                    categories: this.state.week,\n                    crosshair: true\n                }\n            ],\n            yAxis: [\n                { // Primary yAxis\n                    labels: {\n                        format: '{value}°F'\n                    },\n                    title: {\n                        text: 'Temperature'\n                    }\n                }, { // Secondary yAxis\n                    title: {\n                        text: 'Flu Rate'\n                    },\n                    labels: {\n                        format: '{value} %'\n                    },\n                    opposite: true\n                }\n            ],\n            tooltip: {\n                shared: true\n            },\n            legend: {\n                layout: 'vertical',\n                align: 'left',\n                x: 120,\n                verticalAlign: 'top',\n                y: 10,\n                floating: true,\n                backgroundColor: 'rgba(255,255,255,0.25)'\n            },\n            series: [\n                {\n                    name: 'Flu Rate',\n                    type: 'line',\n                    yAxis: 1,\n                    data: this.state.fluRate,\n                    tooltip: {\n                        valueSuffix: ' %'\n                    }\n\n                }, {\n                    name: 'Temperature',\n                    type: 'spline',\n                    data: this.state.temp,\n                    tooltip: {\n                        valueSuffix: '°F'\n                    }\n                }\n            ]\n        }\n        return (\n            <React.Fragment>\n                {this.state.loader\n                    ? <div className=\"loader\"/>\n                    : <React.Fragment>\n                        <PageHeader header=\"Kobai\"/>\n                        <div className=\"row placeholders\">\n                            <div className=\"col-xs-12 col-sm-12 placeholder insight-tab\">\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <ReactHighcharts config={config} ref=\"chart\"/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </React.Fragment>}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default KobaiApp;\n"],"sourceRoot":""}