{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/AnalyticalModel.js","components/FluActivityModel.js","components/PredictiveAnalyst.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","AnalyticalModel","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","handleChange","e","d","groupBy","state","fluData","setState","chartData","target","value","buildSeries","handleInputChange","model","update","filter","name","check","checked","id","data","modelName","map","x","concat","s","fd","k","push","series","categories","keys","seasons","_this2","loc","window","location","hostname","fetch","then","res","json","catch","error","console","_this3","_this$state","react_default","a","createElement","className","onChange","key","m","type","for","AppChart","chartTitle","React","Component","FluActivityModel","log","fluActivity","PredictiveAnalyst","toggle","bind","assertThisInitialized","activeTab","tab","match","Fragment","Common","header","NavLink","exact","activeClassName","to","path","Route","component"],"mappings":"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","file":"static/js/5.697e8b38.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React from 'react';\nimport AppChart from '../components/AppChart';\nimport {groupBy} from 'lodash';\nclass AnalyticalModel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            series: [],\n            fluData: [],\n            chartData: [],\n            model: [\n                {\n                    id: 0,\n                    name: \"LSTM\",\n                    check: false\n                }, {\n                    id: 1,\n                    name: \"SARIMA\",\n                    check: false\n                }\n            ],\n            seasons: [],\n            value: \"season\"\n        }\n    }\n    componentDidMount() {\n        const loc = window.location.hostname === \"localhost\"\n            ? \"http://localhost:5000\"\n            : \"\"\n        fetch(`${loc}/api/fluModel`)\n            .then(res => res.json())\n            .then(res => {\n                const seasons = Object.keys(groupBy(res.fluData, \"SEASON\"));\n                this.setState({\n                    fluData: res.fluData,\n                    chartData: res.fluData,\n                    seasons\n                }, () => {\n                    this.buildSeries(res.fluData);\n                })\n\n            })\n            .catch(error => console.error('Error:', error))\n    }\n    handleChange = (e) => {\n        const d = groupBy(this.state.fluData, \"SEASON\");\n        this.setState({\n            chartData: e.target.value === \"season\"\n                ? this.state.fluData\n                : d[e.target.value],\n            value: e.target.value\n        }, () => {\n            this.buildSeries(this.state.chartData);\n        });\n    }\n    handleInputChange = (e) => {\n        const target = e.target;\n        let model = this.state.model;\n        let update = model.filter(i => i.name === target.name);\n        update[0].check = target.checked;\n        model[update.id] = update;\n        this.setState({\n            model\n        }, () => {\n            this.buildSeries(this.state.chartData);\n        });\n    }\n    buildSeries = (data) => {\n        let modelName = this\n            .state\n            .model\n            .filter(i => i.check)\n            .map(i => i.name);\n        const x = [\n            \"Avg Weekly Temp\", ...modelName\n        ];\n        const s = [];\n        const fd = this.state.chartData;\n        for (var i in x) {\n            let data = fd.map(k => {\n                return k[x[i]];\n            })\n            s.push({name: x[i], data: data})\n        }\n        this.setState({\n            series: s,\n            categories: Object.keys(groupBy(fd, \"Date\"))\n        });\n    }\n    render() {\n        const {model, seasons} = this.state;\n        return (\n            <div className=\"row placeholders\">\n                <div className=\"col-xs-12 col-sm-12 placeholder insight-tab\">\n                    <div className=\"row\">\n                        <div className=\"col col-md-1\">\n                            <select className=\"form-control\">\n                                <option>USA</option>\n                            </select>\n                        </div>\n                        <div className=\"col col-md-2\">\n                            <select className=\"form-control\">\n                                <option>Michigan</option>\n                            </select>\n                        </div>\n                        <div className=\"col col-md-2\">\n                            <select\n                                className=\"form-control\"\n                                value={this.state.value}\n                                onChange={this.handleChange}>\n                                <option value=\"season\">All Seasons</option>\n                                {seasons.map(s => <option key={s} value={s}>{s}</option>)}\n                            </select>\n                        </div>\n                        <div className=\"col col-md-4 mt-2\">\n                            <div className=\"row\">\n                                Forecasting model:\n                                <form className=\"row\">\n                                    {model.map(m => {\n                                        return (\n                                            <div className=\"form-check ml-4\" key={m.name}>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    name={m.name}\n                                                    checked={m.check}\n                                                    onChange={this.handleInputChange}\n                                                    className=\"form-check-input\"\n                                                    id=\"exampleCheck1\"/>\n                                                <label className=\"form-check-label\" for=\"exampleCheck1\">{m.name}</label>\n                                            </div>\n                                        )\n                                    })}\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <AppChart\n                                chartTitle=\"Flu Forecast\"\n                                categories={this.state.categories}\n                                series={this.state.series}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AnalyticalModel","import React from 'react';\nimport AppChart from '../components/AppChart';\nimport {groupBy} from 'lodash';\nclass FluActivityModel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            series: [],\n            fluData: [],\n            chartData: [],\n            model: [],\n            seasons: [],\n            value: \"season\"\n        }\n    }\n    componentDidMount() {\n        const loc = window.location.hostname === \"localhost\"\n            ? \"http://localhost:5000\"\n            : \"\"\n        fetch(`${loc}/api/fluActivity`)\n            .then(res => res.json())\n            .then(res => {\n                const seasons = Object.keys(groupBy(res.fluActivity, \"SEASON\"));\n                this.setState({\n                    fluData: res.fluActivity,\n                    chartData: res.fluActivity,\n                    model: res.model,\n                    seasons\n                }, () => {\n                    this.buildSeries(res.fluActivity);\n                })\n\n            })\n            .catch(error => console.error('Error:', error))\n    }\n    handleChange = (e) => {\n        const d = groupBy(this.state.fluData, \"SEASON\");\n        this.setState({\n            chartData: e.target.value === \"season\"\n                ? this.state.fluData\n                : d[e.target.value],\n            value: e.target.value\n        }, () => {\n            this.buildSeries(this.state.chartData);\n        });\n    }\n    handleInputChange = (e) => {\n        const target = e.target;\n        let model = this.state.model;\n        let update = model.filter(i => i.id === target.name);\n        update[0].check = target.checked;\n        model[update.id] = update;\n        this.setState({\n            model\n        }, () => {\n            this.buildSeries(this.state.chartData);\n        });\n    }\n    buildSeries = (data) => {\n        let modelName = this\n            .state\n            .model\n            .filter(i => i.check)\n            .map(i => i.id);\n        const x = [\n            \"ACTIVITY_LEVEL\", ...modelName\n        ];\n        const s = [];\n        const fd = this.state.chartData;\n        for (var i in x) {\n            let data = fd.map(k => {\n                return k[x[i]];\n            })\n            s.push({name: x[i], data: data})\n        }\n        this.setState({\n            series: s,\n            categories: Object.keys(groupBy(fd, \"WEEKEND\"))\n        });\n        console.log(this.state)\n    }\n    render() {\n        const {model, seasons} = this.state;\n        return (\n            <div className=\"row placeholders\">\n                {/**/}\n                <div className=\"col-xs-12 col-sm-12 placeholder insight-tab\">\n                    <div className=\"row\">\n                        <div className=\"col col-md-1\">\n                            <select className=\"form-control\">\n                                <option>USA</option>\n                            </select>\n                        </div>\n                        <div className=\"col col-md-2\">\n                            <select className=\"form-control\">\n                                <option>Michigan</option>\n                            </select>\n                        </div>\n                        <div className=\"col col-md-2\">\n                            <select\n                                className=\"form-control\"\n                                value={this.state.value}\n                                onChange={this.handleChange}>\n                                <option value=\"season\">All Seasons</option>\n                                {seasons.map(s => <option key={s} value={s}>{s}</option>)}\n                            </select>\n                        </div>\n                        <div className=\"col col-md-12 mt-3 pl-4\">\n                            <div className=\"row\">\n                                <h6>Forecasting model:</h6>\n                                <form className=\"row\">\n                                    {model.map(m => {\n                                        return (\n                                            <div className=\"form-check ml-4\" key={m.id}>\n                                                <input\n                                                    type=\"checkbox\"\n                                                    name={m.id}\n                                                    checked={m.check}\n                                                    onChange={this.handleInputChange}\n                                                    className=\"form-check-input\"\n                                                    id=\"exampleCheck1\"/>\n                                                <label className=\"form-check-label\">{m.name}</label>\n                                            </div>\n                                        )\n                                    })}\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <AppChart\n                                chartTitle=\"Flu Activity\"\n                                categories={this.state.categories}\n                                series={this.state.series}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default FluActivityModel","import React, {Component} from 'react';\nimport {BrowserRouter, Route, NavLink} from 'react-router-dom';\nimport {PageHeader} from '../utils/Common';\nimport AnalyticalModel from '../components/AnalyticalModel'\nimport FluActivityModel from '../components/FluActivityModel'\n\nclass PredictiveAnalyst extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggle = this\n            .toggle\n            .bind(this);\n        this.state = {\n            activeTab: '1'\n        };\n    }\n\n    toggle(tab) {\n        if (this.state.activeTab !== tab) {\n            this.setState({activeTab: tab});\n        }\n    }\n    render() {\n        const {match} = this.props;\n        return (\n            <React.Fragment>\n                <PageHeader header=\"Predictive Analytics\"/>\n                <div className=\"row placeholders\">\n                    <div className=\"col-xs-12 col-sm-12 placeholder\">\n                        <ul className=\"nav nav-pills\">\n                            <li className=\"nav-item\">\n                                <NavLink\n                                    exact\n                                    activeClassName=\"active\"\n                                    className=\"nav-link \"\n                                    to={`${match.path}`}>Analytical Model Optimization Results</NavLink>\n                            </li>\n                            <li className=\"nav-item\">\n                                <NavLink\n                                    activeClassName=\"active\"\n                                    className=\"nav-link\"\n                                    to={`${match.path}/flu-activity`}>Flu Disease Activity Predictive Model</NavLink>\n                            </li>\n                        </ul>\n                        <Route exact path={`${match.path}`} component={AnalyticalModel}/>\n                        <Route path={`${match.path}/flu-activity`} component={FluActivityModel}/>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default PredictiveAnalyst;\n"],"sourceRoot":""}